
@startuml Handler-Funktionen und Handler-Klasse

!pragma useNewPackage
skinparam classAttributeIconSize 0
skinparam componentStyle uml2

interface Promise<T>

package express {
  package core {
    interface Express
  }

  class "express()" as express
  hide express circle

  interface Request
  interface Response
}

class App <<boundary>> {
  + readonly app: Express
}
App ..> Express
App ..> express

package film {
  package entity {
    interface FilmData <<entity>> {
    }
  }

  package service {
    class FilmService << control >> {
    }
  }

  package rest #DDDDDD {
    "Handler Functions" .right.> Request
    "Handler Functions" ..> Response
    "Handler Functions" ..> Promise
    "Handler Functions" ..> FilmHandler

    FilmHandler o--> "1" FilmService : service
    FilmHandler .right.> Request
    FilmHandler ..> Response
    FilmHandler ..> FilmData
    FilmHandler ..> Promise

    class "Handler Functions" << boundary >> {
      + async findById(req: Request, res: Response): Promise<void>
      + async find(req: Request, res: Response): Promise<void>
      + async create(req: Request, res: Response): Promise<void>
      + async update(req: Request, res: Response): Promise<void>
      + async deleteFn(req: Request, res: Response): Promise<void>
    }
    hide "Handler Functions" << boundary >> circle

    class FilmHandler << control >> {
      + async findById(req: Request, res: Response): Promise<void>
      + async find(req: Request, res: Response): Promise<void>
      + async create(req: Request, res: Response): Promise<void>
      + async update(req: Request, res: Response): Promise<void>
      + async delete(req: Request, res: Response): Promise<void>
    }
  }
}

App ..> "Handler Functions"

hide empty members

footer (c) Enis Yesilbas

@enduml
